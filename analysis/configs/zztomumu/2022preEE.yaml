goldenjson: analysis/data/Cert_Collisions2022_355100_362760_Golden.txt
lumidata: analysis/data/lumi2022.csv
hlt_paths:
  - IsoMu24
object_selection:
  muons:
    field: events.Muon
    cuts:
      pt: events.Muon.pt > 5
      abseta: np.abs(events.Muon.eta) < 2.4
      dxy: events.Muon.dxy < 0.5
      dz: events.Muon.dz < 1
      sip3d: events.Muon.sip3d < 4
      muon_id: medium
      muon_iso: loose
  electrons:
    field: events.Electron
    cuts:
      pt: events.Electron.pt > 10
      abseta: np.abs(events.Electron.eta) < 2.4
      electron_id: wp80iso
      electron_muon_dr: delta_r_mask(events.Electron, objects['muons'], 0.4)
  jets:
    field: events.Jet
    cuts:
      min_pt: events.Jet.pt > 30
      abseta: np.abs(events.Jet.eta) < 2.5
      jet_id: tightlepveto
      jet_muon_dr: delta_r_mask(events.Jet, objects['muons'], 0.4)
      jet_electron_dr: delta_r_mask(events.Jet, objects['electrons'], 0.4)
  fourmuons:
    field: select_4muons
    cuts:
      z1_cuts: (LorentzVector.delta_r(objects['fourmuons'].z1.lep1,
        objects['fourmuons'].z1.lep2) > 0.02) & (objects['fourmuons'].z1.p4.mass
        < 120.0) & (objects['fourmuons'].z1.p4.mass > 12.0) &
        (objects['fourmuons'].z1.lep1.charge *
        objects['fourmuons'].z1.lep2.charge < 0)
      z2_cuts: (LorentzVector.delta_r(objects['fourmuons'].z2.lep1,
        objects['fourmuons'].z2.lep2) > 0.02) & (objects['fourmuons'].z2.p4.mass
        < 120.0) & (objects['fourmuons'].z2.p4.mass > 12.0) &
        (objects['fourmuons'].z2.lep1.charge *
        objects['fourmuons'].z2.lep2.charge < 0)
  higgs:
    field: select_higgs
    cuts: null
event_selection:
  selections:
    atleast_one_goodvertex: events.PV.npvsGood > 0
    lumimask: get_lumi_mask(events, goldenjson)
    trigger: get_trigger_mask(events, hlt_paths)
    trigger_matching: get_trigger_match_mask(events, events.Muon, hlt_paths)
    leading_muon_pt: ak.firsts(objects['muons'].pt) > 20
    subleading_muon_pt: ak.pad_none(objects['muons'], target=2)[:, 1].pt > 10
    four_muons: ak.num(objects['muons']) == 4
    one_higgs: ak.num(objects['higgs']) == 1
  categories:
    base:
      - atleast_one_goodvertex
      - lumimask
      - trigger
      - trigger_matching
      - leading_muon_pt
      - subleading_muon_pt
      - four_muons
      - one_higgs
histogram_config:
  add_syst_axis: true
  add_weight: true
  axes:
    z1_mass:
      type: Regular
      bins: 100
      start: 12
      stop: 120
      label: $m(Z)$ [GeV]
      expression: objects['higgs'].z1.p4.mass
    z2_mass:
      type: Regular
      bins: 100
      start: 12
      stop: 120
      label: $m(Z^*)$ [GeV]
      expression: objects['higgs'].z2.p4.mass
    higgs_mass:
      type: Regular
      bins: 120
      start: 10
      stop: 150
      label: $m(H)$ [GeV]
      expression: objects['higgs'].p4.mass
    higgs_pt:
      type: Regular
      bins: 50
      start: 0
      stop: 300
      label: $p_T(H)$ [GeV]
      expression: objects['higgs'].p4.pt
    jet_pt:
      type: Regular
      bins: 50
      start: 20
      stop: 500
      label: $p_T(j)$ [GeV]
      expression: objects['jets'].pt
    jet_eta:
      type: Regular
      bins: 50
      start: -2.4
      stop: 2.4
      label: $\eta(j)$
      expression: objects['jets'].eta
    jet_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(j)$
      expression: objects['jets'].phi
    jet_multiplicity:
      type: IntCategory
      categories:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
      label: $N(j)$
      expression: ak.num(objects['jets'])
    leadingjet_cvsl:
      type: Regular
      bins: 50
      start: 0
      stop: 1
      label: Leading Jet CvsL
      expression: ak.pad_none(objects['jets'], target=2)[:, 0].btagPNetCvL
    leadingjet_cvsb:
      type: Regular
      bins: 50
      start: 0
      stop: 1
      label: Leading Jet CvsB
      expression: ak.pad_none(objects['jets'], target=2)[:, 0].btagPNetCvB
    leadingjet_flavour:
      type: IntCategory
      categories:
        - 0
        - 4
        - 5
      label: HadronFlavour
      expression: ak.pad_none(objects['jets'], target=2)[:, 0].hadronFlavour
  layout:
    higgs_mass:
      - higgs_mass
    higgs_pt:
      - higgs_pt
    z1_mass:
      - z1_mass
    z2_mass:
      - z2_mass
    jet_pt:
      - jet_pt
    jet_eta:
      - jet_eta
    jet_phi:
      - jet_phi
    jet_multiplicity:
      - jet_multiplicity
    leading_jet:
      - leadingjet_flavour
      - leadingjet_cvsb
      - leadingjet_cvsl